// find the volume using inhertance
#include <iostream>
#include<bits/stdc++.h>
using namespace std;
class rectangle{
    private:
     int length;
     int breadth;
    public:
     rectangle();
     rectangle(int l,int b);
     rectangle(rectangle &r);
     void setlength(int l);
     void setbreadth(int b);
     int getlength(){
         return length;
     };
     int getbreadth(){
         return breadth;
     };
     int area();
     int perimeter();
     bool issquare();
     ~rectangle();
};
class cuboid : public rectangle{
    private:
      int height;
    public:
      cuboid(int h){
          height=h;
      }
      int getheight(){
          return height;
      }
      void setheight(int h){
          height =h;
      }
      int volume(){
          return height*getlength()*getbreadth();
      }
};
int main(){
    cuboid c(5);
    c.setlength(10);
    c.setbreadth(7);
    cout<<"volume is"<<c.volume()<<endl;
}

rectangle::rectangle(){
    length=1;
    breadth=1;
}
rectangle::rectangle(int l,int b){
    length=l;
    breadth=b;
}
rectangle::rectangle(rectangle &r){
    length=r.length;
    breadth=r.breadth;
}
void rectangle::setlength(int l){
    length=l;
}
void rectangle::setbreadth(int b){
    breadth=b;
}
int rectangle::area(){
    return length*breadth;
    
}
int rectangle::perimeter(){
    return 2*(length*breadth);
}
bool rectangle::issquare(){
    return length==breadth;
}
rectangle::~rectangle(){
    cout<<"Rectangle deleted";
}
